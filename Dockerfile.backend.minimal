FROM node:20-alpine

WORKDIR /app

# Install dependencies
RUN apk add --no-cache tini

# Copy pre-built dist and dependencies
COPY packages/backend/server/dist ./dist
COPY packages/backend/server/package.json ./
COPY node_modules ./node_modules
COPY packages/backend/native ./native

# Copy the mock implementation
COPY packages/backend/native/server-native-mock.js ./native/server-native-mock.js

# Override the native module loader
RUN echo "module.exports = require('./server-native-mock.js');" > ./native/index.js

# Create a minimal server wrapper that starts quickly
RUN echo 'const http = require("http"); \
const PORT = process.env.PORT || 8080; \
console.log(`Starting server on port ${PORT}...`); \
const healthServer = http.createServer((req, res) => { \
  if (req.url === "/health" || req.url === "/" || req.url === "/api/healthz") { \
    res.writeHead(200, {"Content-Type": "text/plain"}); \
    res.end("OK"); \
  } else { \
    res.writeHead(404); \
    res.end("Not Found"); \
  } \
}); \
healthServer.listen(PORT, "0.0.0.0", () => { \
  console.log(`Health check server listening on port ${PORT}`); \
  process.env.AFFINE_SERVER_PORT = PORT; \
  process.env.AFFINE_SERVER_HOST = "0.0.0.0"; \
  try { \
    require("./dist/index.js"); \
    console.log("AFFiNE server started"); \
  } catch (err) { \
    console.error("Failed to start AFFiNE server:", err); \
  } \
});' > /app/server.js

EXPOSE 8080

ENTRYPOINT ["/sbin/tini", "--"]
CMD ["node", "/app/server.js"]
